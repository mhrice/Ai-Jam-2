{"version":3,"sources":["shared.js","DrumifyModel.js","MelodyModel.js","interface.js","App.js","serviceWorker.js","index.js"],"names":["clone","sequences","quantizeNoteSequence","STEPS_PER_BAR","STEPS_PER_QUARTER","reconstructBySize","_x","_x2","_reconstructBySize","apply","this","arguments","_callee","inSeq","models","temperature","maxChunkSize","secondsPerStep","outputs","_loop","startOffset","reconstruction","_args2","regenerator_default","a","wrap","_context2","prev","next","length","undefined","stepsPerQuarterToStepsPerSecond","tempos","qpm","mark","chunk","endOffset","numBars","modelIndex","z","output","_context","Math","min","totalQuantizedSteps","notes","map","n","Object","assign","filter","quantizedStartStep","startTime","endTime","quantizedEndStep","totalTime","ceil","encode","sent","decode","dispose","push","stop","delegateYield","concat","abrupt","_len","args","Array","_key","seqA","seqB","outputSequence","forEach","note","clonedNote","shift","Model","classCallCheck","url","mm","createClass","key","value","_load","asyncToGenerator","model","initialize","t0","console","log","_drumify","_callee2","unquantizeSequence","MelodyModel","MusicRNN","_predict","inSequence","temp","steps","variations","returnSequences","i","continuation","continueSequence","ai","Interface","_this","possibleConstructorReturn","getPrototypeOf","call","state","opacity","_this2","setState","setTimeout","react_default","createElement","className","props","bassline","drums","round","drumTemperature","melody","aiMelody","melodyTemperature","style","status","Component","App","onNoteDown","e","Tone","Transport","recording","start","position","freq","midiToFreq","number","gain","getGain","velocity","synth","triggerAttack","volume","rawVelocity","startPosition","quantizeTime","Time","quantize","toBarsBeatsSixteenths","onNoteUp","ev","changeSynth","triggerRelease","toSeconds","timeDelta","endPosition","s","split","Number","pitch","duration","isDrum","time","transportStartTime","onControlChange","controller","kickAdd","clear","kickLoop","scheduleRepeat","kick","kickVolume","drumAdds","melodySave","melodyNotes","aiNotes","objectSpread","cancel","part","basslinePart","newMelodyTemperature","metro","metroPlayer","loaded","interfaceRef","current","trigger","createSequence","then","out","aiMelodyPresent","random","playDrumsAndSequence","melodyGenerated","newSequence","loop","basslinePresent","drumsPresent","melodyPresent","firstDrumsGeneration","FMSynth","modulationIndex","modulationEnvelope","attack","decay","connect","Master","reverb","newDrumTemperature","PolySynth","vibrato","Vibrato","set","oscillator","type","drumNotes","record","React","createRef","melodyModel","drumModel","load","Reverb","generate","basslineSynth","melodySynth","Synth","aiVibrato","aiSynth","Player","metroVolume","Volume","chain","context","lookAhead","snareVolume","snare","closedHatVolume","closedHat","openHatVolume","openHat","clapVolume","clap","highTomVolume","highTom","lowTomVolume","lowTom","crashVolume","crash","rideVolume","ride","midTomVolume","midTom","WebMidi","enable","err","input","inputs","addListener","bpm","_this3","setLoopPoints","playRecording","_this4","Part","triggerAttackRelease","sequence","timeSignatures","numerator","denominator","quantizationInfo","stepsPerQuarter","predict","drumify","_this5","aiPart","schedule","melodySaveLoop","playMelody","_this6","midi","pow","index","interface_Interface","ref","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ba46275.chunk.js","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport {\r\n    sequences\r\n} from '@magenta/music';\r\nconst {\r\n    quantizeNoteSequence,\r\n    clone\r\n} = sequences;\r\n\r\nconst STEPS_PER_BAR = 16;\r\nconst STEPS_PER_QUARTER = 4;\r\n\r\n/**\r\n * Reconstructs unquantized sequence by breaking it into as large of chunks as\r\n * possible that are supported by the given models.\r\n *\r\n * @param inSeq the NoteSequence to reconstruct.\r\n * @param models a list of MusicVAE models where the value of `index + 1`\r\n * specifies the number of bars that the model supports for reconstruction.\r\n * @param temperature the sampling temperature to use in reconstruction.\r\n **/\r\nexport async function reconstructBySize(inSeq, models, temperature = 1) {\r\n    // console.log(\"INPUT: \",inSeq)\r\n    // inSeq = quantizeNoteSequence(inSeq, STEPS_PER_QUARTER);\r\n    // console.log(\"OUTPUT:\",inSeq)\r\n    // Process in as large of chunks as possible.\r\n    const maxChunkSize = models.length * STEPS_PER_BAR;\r\n    const secondsPerStep = 1 / sequences.stepsPerQuarterToStepsPerSecond(\r\n        STEPS_PER_QUARTER, inSeq.tempos[0].qpm);\r\n    const outputs = [];\r\n    for (let startOffset = 0; startOffset < inSeq.totalQuantizedSteps; startOffset += maxChunkSize) {\r\n        const chunk = clone(inSeq);\r\n        const endOffset = Math.min(startOffset + maxChunkSize, inSeq.totalQuantizedSteps);\r\n        chunk.notes = inSeq.notes\r\n            .map(n => Object.assign({}, n))\r\n            .filter(n => startOffset <= n.quantizedStartStep && n.quantizedStartStep < endOffset)\r\n            .map(n => {\r\n                n.startTime -= startOffset * secondsPerStep;\r\n                n.endTime -= startOffset * secondsPerStep;\r\n                n.quantizedStartStep -= startOffset;\r\n                n.quantizedEndStep -= startOffset;\r\n                return n;\r\n            })\r\n        chunk.totalQuantizedSteps = endOffset - startOffset;\r\n        chunk.totalTime = chunk.totalQuantizedSteps * secondsPerStep;\r\n\r\n        // Select model based on the number of actual bars in the chunk.\r\n        const numBars = Math.ceil(chunk.totalQuantizedSteps / STEPS_PER_BAR);\r\n        const modelIndex = numBars - 1;\r\n        const z = await models[modelIndex].encode([chunk]);\r\n        // console.log(chunk)\r\n        const output = await models[modelIndex].decode(z, temperature, undefined, undefined, inSeq.tempos[0].qpm);\r\n        z.dispose();\r\n        outputs.push(output[0]);\r\n    }\r\n    const reconstruction = concat(...outputs);\r\n    return reconstruction;\r\n}\r\n\r\nfunction concat(...args) {\r\n    if (args.length === 2) {\r\n        const [seqA, seqB] = args;\r\n        const outputSequence = clone(seqA);\r\n        seqB.notes.forEach(note => {\r\n            const clonedNote = Object.assign({}, note);\r\n            clonedNote.startTime += seqA.totalTime;\r\n            clonedNote.endTime += seqA.totalTime;\r\n            outputSequence.notes.push(clonedNote);\r\n        })\r\n        outputSequence.totalTime = seqA.totalTime + seqB.totalTime;\r\n        return outputSequence;\r\n    } else if (args.length > 2) {\r\n        // Recurse.\r\n        const first = args.shift()\r\n        return concat(first, concat(...args));\r\n    } else {\r\n        // Nothing to concat.\r\n        return args[0];\r\n    }\r\n}","/**\r\n * @license\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { reconstructBySize } from './shared';\r\n// import { resolve } from 'path';\r\n\r\n// const modelPath = PRODUCTION ? `${process.resourcesPath}/app/` : '.';\r\nimport * as mm from '@magenta/music';\r\n\r\nexport class Model {\r\n\tconstructor() {\r\n\t\tconst models = [\r\n\t\t\t// \"https://storage.googleapis.com/magentadata/js/checkpoints/music_vae/groovae_2bar_tap2drum\",\r\n\t\t\t\"https://storage.googleapis.com/magentadata/js/checkpoints/music_vae/groovae_2bar_humanize\",\r\n\r\n\t\t\t\r\n\t\t\t// \"https://storage.googleapis.com/magentadata/js/checkpoints/music_vae/groovae_4bar\"\r\n\t\t]\r\n        // this.model = new mm.MusicVAE(\"https://storage.googleapis.com/magentadata/js/checkpoints/music_vae/groovae_2bar_humanize\");\r\n        \r\n\t// \tconst models = [\r\n    //         ''\r\n    //         // 'models/groovae_tap2drum_1bar/model.ckpt-3061.data-00000-of-00001'\r\n    //         // 'models/2bar_humanize/config.json'\r\n\t// // \t\tresolve(modelPath, 'models/groovae_tap2drum_1bar'),\r\n\t// // \t\tresolve(modelPath, 'models/groovae_tap2drum_2bar'),\r\n\t// // \t\tresolve(modelPath, 'models/groovae_tap2drum_3bar'),\r\n    // // \t\tresolve(modelPath, 'models/groovae_tap2drum_4bar')\r\n    \r\n\t// \t];\r\n\t\tthis.models = models.map(url => new mm.MusicVAE(url));\r\n\t}\r\n\r\n\tasync load() {\r\n\t\ttry {\r\n            await this.models.forEach(model=>model.initialize());\r\n\t\t} catch (e){\r\n            console.log(e);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\t// async drumify(seq){}\r\n\r\n\tasync drumify(inSeq, temperature=1) {\r\n\t\treturn await reconstructBySize(inSeq, this.models, temperature);\r\n\t}\r\n}\r\n","/**\r\n * @license\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n\r\n// import { resolve } from 'path';\r\n// const modelPath = PRODUCTION ? `${process.resourcesPath}/app/` : '.';\r\n// import * as mm from '@magenta/music';\r\nimport { MusicRNN,sequences } from '@magenta/music'\r\nconst {unquantizeSequence, clone } = sequences\r\nexport class MelodyModel {\r\n    constructor() {\r\n        this.model = new MusicRNN('https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/melody_rnn');\r\n\r\n\t}\r\n\t\r\n\tasync load(){\r\n\t\tawait this.model.initialize();\r\n\t\t\r\n\t}\r\n\r\n\r\n\tasync predict(inSequence, temp = 1, steps = 32, variations = 1) {\r\n\t    const returnSequences = []\r\n\t    for (let i = 0; i < variations; i++) {\r\n            let continuation = await this.model.continueSequence(inSequence, steps, temp)\r\n\t        continuation = unquantizeSequence(continuation, inSequence.tempos[0].qpm)\r\n            continuation.notes.forEach(n=>n.ai = true)\r\n\t        // continuation = this.concat(inSequence, continuation)\r\n\t        // continuation.notes.forEach(n => n.velocity = 100)\r\n            // returnSequences.push(continuation)\r\n            return continuation;\r\n\t    }\r\n\t    return returnSequences\r\n\t}\r\n\r\n\tconcat(seqA, seqB) {\r\n\t    const outputSequence = clone(seqA)\r\n\t    seqB.notes.forEach(note => {\r\n\t        note.startTime += seqA.totalTime\r\n\t        note.endTime += seqA.totalTime\r\n\t        note.quantizedStartStep += seqA.totalQuantizedSteps\r\n\t        note.quantizedEndStep += seqA.totalQuantizedSteps\r\n\t        outputSequence.notes.push(note)\r\n\t    })\r\n\t    outputSequence.totalTime += seqB.totalTime\r\n\t    outputSequence.totalQuantizedSteps += seqB.totalQuantizedSteps\r\n\t    return outputSequence\r\n\r\n\t}\r\n}\r\n","import React, {Component} from 'react';\r\nimport './interface.css';\r\n\r\n\r\nexport default class Interface extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            opacity: 1\r\n        }\r\n    }\r\n\r\n    trigger(){\r\n        this.setState({opacity: 0});\r\n        setTimeout(()=>{\r\n            this.setState({opacity: 1})\r\n        }, 0.02)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"interface-container\">\r\n            <div className=\"title\" >AI Jam 2</div>\r\n                <div className=\"patch-container\">            \r\n                    {this.props.bassline && <div className=\"bassline\">Bassline</div> }\r\n                    {this.props.drums && (\r\n                    <div className=\"drums-container\">\r\n                        <div className=\"drums-title\">Drums</div>\r\n                        <div className=\"drums-temperature\">Temperature: <div className=\"drums-temperature-color\">{Math.round(this.props.drumTemperature*10)/10}</div></div>\r\n                    </div>\r\n                    )}\r\n                    {this.props.melody && (\r\n                    <div className=\"melody-container\">\r\n                        <div className=\"melody-title\">Melody</div>\r\n                    </div>\r\n                    )}   \r\n                {this.props.aiMelody && (\r\n                    <div className=\"ai-melody-container\">\r\n                        <div className=\"ai-melody-title\">Generated Melody</div>\r\n                        <div className=\"ai-melody-temperature\">Temperature: <div className=\"ai-melody-temperature-color\">{Math.round(this.props.melodyTemperature*10)/10}</div></div>\r\n                    </div>\r\n                    )}     \r\n                    <div className=\"status\" style={{opacity: this.state.opacity}}>{this.props.status}</div>\r\n                </div>\r\n            </div>            \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport { Model } from './DrumifyModel';\nimport {MelodyModel} from './MelodyModel';\nimport WebMidi from 'webmidi';\nimport Tone from \"tone\"; \n\nimport Interface from \"./interface\";\n\n// More Drums\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      status: 'Loading Models...',\n      melodyTemperature: 1.1,\n      drumTemperature: 1.1,\n      basslinePresent: false,\n      drumsPresent: false,\n      melodyPresent: false,\n      aiMelodyPresent: false\n    }\n    this.interfaceRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.melodyModel = new MelodyModel();\n    this.drumModel = new Model();\n    this.drumModel.load().then(() => {\n      this.melodyModel.load().then(()=>{\n      this.setState({status: \"Models Loaded. Waiting for input...\"});\n    // this.synth = new Tone.Synth({oscillator:{type:\"fatsquare\"}});\n    // this.synth.connect(Tone.Master);\n    this.reverb = new Tone.Reverb(10);\n    this.reverb.generate().then(() => {\n      this.reverb.connect(Tone.Master);\n    });\n    // this.synth = new Tone.PolySynth(6);//{oscillator:{type:\"fatsquare\"}});\n    // // this.synth.connect(this.reverb);\n    // let vibrato = new Tone.Vibrato(4, 0.25);\n    // vibrato.connect(this.reverb);\n    // vibrato.connect(Tone.Master)\n    // this.synth.connect(vibrato);    \n    // this.synth.set({\"oscillator\": {\"type\": \"fatsquare\"}});\n    this.synth = new Tone.FMSynth({modulationIndex: 15,modulationEnvelope: {attack:0.1, decay: 0.1}});\n    this.synth.connect(Tone.Master);\n    this.synth.connect(this.reverb);\n\n    this.basslineSynth = new Tone.FMSynth({modulationIndex: 15,modulationEnvelope: {attack:0.1, decay: 0.1}});\n    this.basslineSynth.connect(Tone.Master);\n    this.basslineSynth.connect(this.reverb);\n\n\n    this.melodySynth = new Tone.Synth({oscillator:{type:\"fatsquare\"}});\n    this.melodySynth.connect(Tone.Master);\n    this.melodySynth.connect(this.reverb);\n    \n    let aiVibrato = new Tone.Vibrato(4, 0.25);\n    aiVibrato.connect(this.reverb);\n    aiVibrato.connect(Tone.Master)\n    this.aiSynth = new Tone.Synth({oscillator:{type:\"amsawtooth\"}});\n    this.aiSynth.connect(aiVibrato)\n    // this.aiSynth.connect(Tone.Master);\n    // this.aiSynth.connect(this.reverb);\n\n    this.metroPlayer = new Tone.Player({url: \"./metronome.mp3\"})\n    this.metroVolume = new Tone.Volume(-5);\n    this.metroPlayer.chain(this.metroVolume, Tone.Master)      ;\n    // this.metroVolume.mute = true;\n    // this.metro = Tone.Transport.scheduleRepeat(time => {\n    //     if(this.metroPlayer.loaded){\n    //       this.metroPlayer.start(time);\n    //     }\n    //   }, \"4n\");\n      // Tone.Transport.start();\n\n    Tone.context.lookAhead = 0;\n    this.kickVolume = new Tone.Volume(0);\n    this.kick = new Tone.Player({url: \"./kick.wav\"}).chain(this.kickVolume, Tone.Master);\n    this.snareVolume = new Tone.Volume(0);\n    this.snare = new Tone.Player({url: \"./snare.wav\"}).chain(this.snareVolume, Tone.Master);\n    this.closedHatVolume = new Tone.Volume(0);\n    this.closedHat = new Tone.Player({url: \"./closed_hat.wav\"}).chain(this.closedHatVolume, Tone.Master);\n    this.openHatVolume = new Tone.Volume(0);\n    this.openHat = new Tone.Player({url: \"./open_hat.wav\"}).chain(this.openHatVolume, Tone.Master);\n    this.clapVolume = new Tone.Volume(0);\n    this.clap = new Tone.Player({url: \"./clap.wav\"}).chain(this.clapVolume, Tone.Master);\n    this.highTomVolume = new Tone.Volume(0);\n    this.highTom = new Tone.Player({url: \"./high-tom.wav\"}).chain(this.highTomVolume, Tone.Master);\n    this.lowTomVolume = new Tone.Volume(0);\n    this.lowTom = new Tone.Player({url: \"./low-tom.wav\"}).chain(this.lowTomVolume, Tone.Master);        \n    this.crashVolume = new Tone.Volume(0);\n    this.crash = new Tone.Player({url: \"./crash.wav\"}).chain(this.crashVolume, Tone.Master); \n    this.rideVolume = new Tone.Volume(0);\n    this.ride = new Tone.Player({url: \"./ride.wav\"}).chain(this.rideVolume, Tone.Master); \n    this.midTomVolume = new Tone.Volume(0);\n    this.midTom = new Tone.Player({url: \"./mid-tom.wav\"}).chain(this.midTomVolume, Tone.Master);     \n    this.notes = [];\n    this.kickAdd = false;\n    this.bassline = [];\n    this.melodyNotes = [];\n    this.aiNotes = [];\n    this.recording = false;\n    this.start = false;\n    this.firstDrumsGeneration = true;\n    this.drumAdds = false;\n    this.changeSynth = false;\n\n    WebMidi.enable((err)=>{\n      if (err) {\n        console.log(\"WebMidi could not be enabled.\", err);\n      } else {\n        console.log(\"WebMidi enabled!\");\n      }\n      let input = WebMidi.inputs[0];\n      input.addListener('noteon', \"all\", this.onNoteDown);\n      input.addListener('noteoff', \"all\", this.onNoteUp);\n      input.addListener('controlchange', \"all\", this.onControlChange);\n\n    });\n    this.start = true;\n    });\n  });\n    Tone.Transport.bpm.value = 120;\n\n  }\n\n  onNoteDown=e=>{\n    if(Tone.Transport.state === \"stopped\"){\n      this.setState({status: \"Input\"});\n    }\n    if(this.recording){\n      if(this.start){\n        this.start = false;\n        Tone.Transport.position = 0;\n        Tone.Transport.start();\n        // this.metroVolume.mute = true;\n      }\n    }\n    let freq = this.midiToFreq(e.note.number);\n    let gain = this.getGain(1 - e.velocity);\n    this.synth.triggerAttack(freq);\n    this.synth.volume.value = gain;\n    this.rawVelocity = e.rawVelocity;\n    this.startPosition = Tone.Transport.position;\n    this.note = e.note.number;\n    let quantizeTime = new Tone.Time(this.startPosition).quantize(\"16n\");\n    this.startTime = new Tone.Time(quantizeTime).toBarsBeatsSixteenths() ; \n    this.gain = gain;\n  }\n\n  onNoteUp=ev=>{\n    if(this.changeSynth){\n      let freq = this.midiToFreq(ev.note.number);\n      this.synth.triggerRelease(freq);        \n    } else {\n      this.synth.triggerRelease();\n    }\n\n    let endTime = new Tone.Time(Tone.Transport.position).quantize(\"16n\");\n    let startTime = new Tone.Time(this.startTime).toSeconds();\n    let timeDelta = endTime - startTime;\n    if(timeDelta === 0){\n      timeDelta = 0.25;\n    }\n    let endPosition = Tone.Transport.position;\n    let s  = this.startPosition.split(\":\");\n    let e = endPosition.split(\":\");\n    let quantizedStartStep = 16*Number(s[0]) + 4*Number(s[1])+Math.round(Number(s[2]));\n    let quantizedEndStep = 16*Number(e[0]) + 4*Number(e[1])+Math.round(Number(e[2]));\n    if(quantizedStartStep < 31){\n      this.notes.push({\n        pitch: this.note,\n        quantizedStartStep: quantizedStartStep,\n        quantizedEndStep: quantizedEndStep,\n        startTime: startTime,\n        endTime: endTime,\n        duration: timeDelta,\n        isDrum: false,\n        velocity: this.rawVelocity,\n        gain: this.gain,\n        time: this.startTime,\n        transportStartTime: this.startPosition\n      })\n    }\n    console.log(this.notes)\n  }\n\n  onControlChange = e =>{\n    console.log(\"CONTROL\", e.controller.number)\n    switch(e.controller.number){\n      case 51:\n        if (e.value) {\n          // Add/Remove kick\n          if(this.kickAdd){\n            Tone.Transport.clear(this.kickLoop)\n            this.kickAdd = false;\n          } else {\n            this.kickAdd = true;\n            Tone.Transport.stop();\n            this.kickLoop = Tone.Transport.scheduleRepeat(time => {\n              this.kick.start(time);\n              this.kickVolume = this.getGain(1 - 100/ 128);\n            }, \"4n\")\n            Tone.Transport.start();\n          }\n        }\n      break;\n      case 52:\n        // Add Drums together\n        if (e.value) {\n          this.drumAdds = !this.drumAdds;\n        }\n      break;\n      case 112:\n        // Record Melody\n        if (e.value) {\n          // this.recordMelody();\n          this.melodySave = true;\n        }          \n      break;\n      \n      case 113:\n        if (e.value) {\n          // Generate New Melody\n          if(this.melodyNotes.length){\n            this.notes = this.melodyNotes\n          }\n          if (this.aiNotes.length) {\n            this.notes = this.aiNotes.map(note=>{\n              return {\n                ...note, \n                pitch:note.pitch-12\n              }\n              });\n          }\n          this.recording = false;\n          Tone.Transport.stop();\n          Tone.Transport.cancel();\n          if (this.part) this.part.stop();\n          if (this.basslinePart) this.basslinePart.stop();\n          let newMelodyTemperature = this.state.melodyTemperature - 0.1;\n          if (newMelodyTemperature < 0.2) {\n            newMelodyTemperature = 1.1;\n          }\n          this.setState({status: \"Generating New Melody\", melodyTemperature: newMelodyTemperature})\n          this.metro = Tone.Transport.scheduleRepeat(time => {\n            if (this.metroPlayer.loaded) {\n              this.metroPlayer.start(time);\n              this.interfaceRef.current.trigger();\n            }\n          }, \"4n\");\n          this.createSequence(true).then(out=>{\n            console.log(out.notes)\n            this.setState({aiMelodyPresent: true, status: \"Looping All Elements\"})\n            this.aiNotes = out.notes.map(note=>{\n              let timeDelta = note.endTime - note.startTime;\n              let startTime = new Tone.Time(note.startTime).toBarsBeatsSixteenths();\n              if(timeDelta === 0){\n                timeDelta = 0.25;\n              }              \n              return {\n                ...note,\n                pitch: note.pitch+12,\n                time: startTime,\n                duration: timeDelta,\n                gain: -1 * Math.random()*10\n              }\n            });\n            this.playDrumsAndSequence(true);\n          });         \n          this.melodyGenerated = true;\n\n        }        \n      break;\n      case 114:\n        if(e.value){\n          // Stop\n          this.recording = false;\n          this.newSequence = false;\n          Tone.Transport.stop();\n          Tone.Transport.loop = false; \n          if(this.part) this.part.stop();\n          if(this.basslinePart) this.basslinePart.stop();\n          this.setState({\n            status: 'Input',\n            melodyTemperature: 1.1,\n            drumTemperature: 1.1,\n            basslinePresent: false,\n            drumsPresent: false,\n            melodyPresent: false,\n            aiMelodyPresent: false\n          });\n          Tone.Transport.cancel();\n          this.melodyGenerated = false;\n          this.melodySave = false;\n          this.kickAdd = false;\n          this.drumAdds = false;\n          this.firstDrumsGeneration= true;\n          this.changeSynth = false;\n          this.notes = [];\n          this.bassline = [];\n          this.melodyNotes = [];\n          this.aiNotes = [];\n          this.synth = new Tone.FMSynth({modulationIndex: 15,modulationEnvelope: {attack:0.1, decay: 0.1}});\n          this.synth.connect(Tone.Master);\n          this.synth.connect(this.reverb);\n\n        }\n        break;\n      case 116:\n        if(e.value){\n          // Drums Generation\n          this.kickAdd = false;\n          if(this.firstDrumsGeneration){\n            this.bassline = this.notes;\n            this.firstDrumsGeneration = false;\n          }\n          let newDrumTemperature = this.state.drumTemperature - 0.1;\n          if (newDrumTemperature < 0.2) {\n            newDrumTemperature = 1.1;\n          }\n          this.setState({status: \"Generating Drums...\", drumTemperature: newDrumTemperature});\n          if(this.bassline.length){\n            this.notes = this.bassline;\n          }\n          this.recording = false;\n          Tone.Transport.stop();\n          if (this.part) this.part.stop();\n          if (this.basslinePart) this.basslinePart.stop();\n          if(!this.drumAdds){\n            Tone.Transport.cancel();\n          }\n          this.metro = Tone.Transport.scheduleRepeat(time => {\n            if (this.metroPlayer.loaded) {\n              this.metroPlayer.start(time);\n              this.interfaceRef.current.trigger();        \n            }\n          }, \"4n\");\n\n          this.createSequence(false).then(out=>{\n            this.changeSynth = true;\n            // this.synth.disconnect(Tone.Master);\n            // this.synth.disconnect(this.reverb);\n            this.synth = new Tone.PolySynth(6);//{oscillator:{type:\"fatsquare\"}});\n            // this.synth.connect(this.reverb);\n            let vibrato = new Tone.Vibrato(4, 0.25);\n            vibrato.connect(this.reverb);\n            vibrato.connect(Tone.Master)\n            this.synth.connect(vibrato);    \n            this.synth.set({\"oscillator\": {\"type\": \"fatsquare\"}});\n\n            console.log(out.notes)\n            this.drumNotes = out.notes;\n            this.setState({drumsPresent: true, status: \"Playing Drums with Sequence\"});\n            this.playDrumsAndSequence(false);\n          });\n        }\n        break;\n      case 117:\n        // Recording\n        if(e.value){\n          this.record()\n        }\n\n        break;\n        default:\n    }\n  }\n\n  record(){\n    this.recording = true;\n    // this.metroVolume.mute = false;\n    this.notes = [];\n    this.bassline = [];\n    this.start = true;\n    this.setState({ status: \"Recording Bassline...\" })\n    this.metro = Tone.Transport.scheduleRepeat(time => {\n      if (this.metroPlayer.loaded) {\n        this.metroPlayer.start(time);\n        this.interfaceRef.current.trigger();\n      }\n      \n    }, \"4n\");\n    Tone.Transport.start();\n    Tone.Transport.position = 0;\n\n    this.loop = Tone.Transport.scheduleRepeat(time=>{\n      if(this.notes.length){\n        Tone.Transport.cancel();\n        Tone.Transport.setLoopPoints(0, \"2m\");\n        Tone.Transport.loop = true;  \n        Tone.Transport.stop();\n        this.playRecording();\n\n      }\n    }, \"2m\")\n\n  }\n\n  playRecording(){\n    this.part = new Tone.Part((time, value)=> {\n      this.basslineSynth.triggerAttackRelease(this.midiToFreq(value.pitch), value.duration, time);\n      this.basslineSynth.volume.value = value.gain;\n    }, this.notes);\n    this.metro = Tone.Transport.scheduleRepeat(time => {\n      if (this.metroPlayer.loaded) {\n        this.metroPlayer.start(time);\n        this.interfaceRef.current.trigger();\n      }\n    }, \"4n\");\n    this.part.start(0);\n    Tone.Transport.start();\n    Tone.Transport.position = 0;\n    this.setState({basslinePresent: true, status: \"Looping Bassline\"});\n  }\n\n  async createSequence(melody){\n    const sequence = {\n        timeSignatures: [{\n          time: 0,\n          numerator: 4,\n          denominator: 4\n        }],\n        quantizationInfo: {stepsPerQuarter: 4},\n        tempos: [{\n          time: 0,\n          qpm: 120\n        }],\n        totalQuantizedSteps: 32,\n        notes: this.notes\n     }\n     console.log(this.notes)\n    \n    if (melody){\n      return await this.melodyModel.predict(sequence, this.state.melodyTemperature)\n    }\n    return await this.drumModel.drumify(sequence, this.state.drumTemperature);\n  }\n\n  playDrumsAndSequence(ai){\n        this.basslinePart = new Tone.Part((time, value) => {\n          this.basslineSynth.triggerAttackRelease(this.midiToFreq(value.pitch), value.duration, time);\n          this.basslineSynth.volume.value = value.gain;\n        }, this.bassline);\n        this.basslinePart.start(0);\n       if(this.aiNotes) {\n        this.aiPart = new Tone.Part((time, value) => {\n          this.aiSynth.triggerAttackRelease(this.midiToFreq(value.pitch), value.duration, time);\n          this.aiSynth.volume.value = value.gain;\n        }, this.aiNotes);\n        this.aiPart.start(0);\n\n        this.melody = new Tone.Part((time, value) => {\n          this.melodySynth.triggerAttackRelease(this.midiToFreq(value.pitch), value.duration, time);\n          this.melodySynth.volume.value = value.gain;\n        }, this.melodyNotes);\n        this.melody.start(0);\n      }\n      \n    this.drumNotes.forEach(note => {\n      if(note.startTime > 4){\n        note.startTime = note.startTime - 2;\n      } \n      if (note.startTime < 0) {\n        note.startTime = note.startTime + 2;\n      }\n      if(note.endTime > 4){\n        note.endTime = note.endTime - 2;\n      } \n      if (note.endTime < 0) {\n        note.endTime = note.endTime + 2;\n      }\n      \n      switch(note.pitch){\n        case 36:\n          Tone.Transport.schedule(time=>{\n            this.kick.start(time);\n            this.kickVolume = this.getGain(1-note.velocity/128);\n          }, note.startTime)                \n          break;\n        case 38:\n          Tone.Transport.schedule(time => {\n            this.snare.start(time);\n            this.snareVolume = this.getGain(1 - note.velocity / 128);\n          }, note.startTime)\n            break;\n        case 39:\n          Tone.Transport.schedule(time => {\n            this.clap.start(time);\n            this.clapVolume = this.getGain(1 - note.velocity / 128);\n          }, note.startTime)\n        break;\n        case 42:\n          Tone.Transport.schedule(time => {\n            this.closedHat.start(time);\n            this.closedHatVolume = this.getGain(1 - note.velocity / 128);\n          }, note.startTime);\n          break;\n        case 45:\n          Tone.Transport.schedule(time => {\n            this.lowTom.start(time);\n            this.lowTomVolume = this.getGain(1 - note.velocity / 128);\n          }, note.startTime);\n        break;\n        case 46:\n          Tone.Transport.schedule(time => {\n            this.openHat.start(time);\n            this.openHatVolume = this.getGain(1 - note.velocity / 128);\n          }, note.startTime);\n          break;\n        case 48:\n          Tone.Transport.schedule(time => {\n            this.midTom.start(time);\n            this.midTomVolume = this.getGain(1 - note.velocity / 128);\n          }, note.startTime);\n        break;\n        case 49:\n          Tone.Transport.schedule(time => {\n            this.crash.start(time);\n            this.crashVolume = this.getGain(1 - note.velocity / 128);\n          }, note.startTime);\n        break;\n        case 50:\n          Tone.Transport.schedule(time => {\n            this.highTom.start(time);\n            this.highTomVolume = this.getGain(1 - note.velocity / 128);\n          }, note.startTime);\n        break;\n        case 51:\n          Tone.Transport.schedule(time => {\n            this.ride.start(time);\n            this.rideVolume = this.getGain(1 - note.velocity / 128);\n          }, note.startTime);\n        break;\n          default:\n        }\n    })\n    this.melodySaveLoop = Tone.Transport.scheduleRepeat(time=>{\n      if(this.melodySave){\n        this.playMelody();\n        this.melodySave = false;\n      } else {\n        this.notes = [];\n      }\n    }, \"0\")\n    Tone.Transport.start();\n  }\n\n  playMelody(){\n    this.setState({melodyPresent: true, status: \"Looping Melody\"});\n    Tone.Transport.stop();\n    Tone.Transport.clear(this.melodySaveLoop);\n    this.melodyNotes = this.notes;\n    this.melody = new Tone.Part((time, value) => {\n      this.melodySynth.triggerAttackRelease(this.midiToFreq(value.pitch), value.duration, time);\n      this.melodySynth.volume.value = value.gain;\n    }, this.notes);\n    this.melodySaveLoop = Tone.Transport.scheduleRepeat(time => {\n      if (this.melodySave) {\n        this.melody.stop();\n        this.playMelody();\n        this.melodySave = false;\n      } else {\n        this.notes = [];\n      }\n    }, \"0\")\n    this.melody.start(0);\n    Tone.Transport.start();\n  }\n\n  midiToFreq(midi) {\n    return Math.pow(2, ((midi - 69) / 12)) * 440;\n  }\n\n  getGain(index) {\n    //1 t0 0 ->\n    //-10 to 0dB\n    return -1 * (index * 10);\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Interface\n        status={this.state.status}\n        drumTemperature={this.state.drumTemperature}\n        melodyTemperature={this.state.melodyTemperature}\n        drums={this.state.drumsPresent}\n        melody={this.state.melodyPresent}\n        aiMelody={this.state.aiMelodyPresent}\n        bassline={this.state.basslinePresent}\n        ref = {this.interfaceRef}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}